{{- if .Values.npd.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "neuron-node-problem-detector-and-recovery.fullname" . }}
  namespace: {{ include "neuron-node-problem-detector-and-recovery.namespace" . }}
  labels:
    app: {{ include "neuron-node-problem-detector-and-recovery.fullname" . }}
    {{- include "neuron-node-problem-detector-and-recovery.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ include "neuron-node-problem-detector-and-recovery.fullname" . }}
      {{- include "neuron-node-problem-detector-and-recovery.selectorLabels" . | nindent 6 }}
  {{- with .Values.npd.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if (len (include "neuron-node-problem-detector-and-recovery.podAnnotations" .)) }}
      annotations:
        {{- include "neuron-node-problem-detector-and-recovery.podAnnotations" . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "neuron-node-problem-detector-and-recovery.fullname" . }}
        {{- include "neuron-node-problem-detector-and-recovery.templateLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "neuron-node-problem-detector-and-recovery.serviceAccountName" . }}
      {{- with .Values.npd.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.npd.priorityClassName }}
      priorityClassName: {{ .Values.npd.priorityClassName }}
      {{- end }}
      {{- if .Values.npd.runtimeClassName }}
      runtimeClassName: {{ .Values.npd.runtimeClassName }}
      {{- end }}
      {{- with .Values.npd.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.npd.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.npd.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: {{ include "node.instanceTypeKey" . }}
                    operator: In
                    values: {{ .Values.neuronInstances | toYaml | nindent 22 }}
      containers:
      - name: node-problem-detector
        command:
        - /node-problem-detector
        - --logtostderr
        - --config.system-log-monitor=/config/kernel-monitor.json
        image: {{ include "neuron-node-problem-detector-and-recovery.nodeProblemDetector.fullimage" . }}
        ports:
        - containerPort: 20257
        resources:
          limits:
            cpu: {{ .Values.npd.nodeProblemDetector.resources.limits.cpu }}
            memory: {{ .Values.npd.nodeProblemDetector.resources.limits.memory }}
          requests:
            cpu: {{ .Values.npd.nodeProblemDetector.resources.requests.cpu }}
            memory: {{ .Values.npd.nodeProblemDetector.resources.requests.memory }}
        imagePullPolicy: {{ .Values.npd.nodeProblemDetector.image.pullPolicy }}
        securityContext:
          {{- include "neuron-node-problem-detector-and-recovery.nodeProblemDetector.securityContext" . | nindent 10 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: log
          mountPath: /var/log
          readOnly: true
        - name: kmsg
          mountPath: /dev/kmsg
          readOnly: true
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: config
          mountPath: /config
          readOnly: true
      - name: node-recovery
        command:
        - /bin/sh
        - -c
        - "sleep 60 && /scripts/check-health.py"
        image: {{ include "neuron-node-problem-detector-and-recovery.nodeRecovery.fullimage" . }}
        resources:
          limits:
            cpu: {{ .Values.npd.nodeRecovery.resources.limits.cpu }}
            memory: {{ .Values.npd.nodeRecovery.resources.limits.memory }}
          requests:
            cpu: {{ .Values.npd.nodeRecovery.resources.requests.cpu }}
            memory: {{ .Values.npd.nodeRecovery.resources.requests.memory }}
        imagePullPolicy: {{ .Values.npd.nodeRecovery.image.pullPolicy }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ENABLE_RECOVERY
          value: {{ .Values.npd.nodeRecovery.enabled | quote }}
      volumes:
      - name: log
        hostPath:
          path: /var/log/
      - name: kmsg
        hostPath:
          path: /dev/kmsg
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: config
        configMap:
          name: {{ .Values.npd.config.name }}
          defaultMode: 0555
          items:
          - key: kernel-monitor.json
            path: kernel-monitor.json
{{- end }}